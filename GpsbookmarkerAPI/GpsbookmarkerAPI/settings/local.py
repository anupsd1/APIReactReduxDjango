"""
Django settings for GpsbookmarkerAPI project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'lpxv=!)@yvy_4)v+6(!3c$oy36xbtw93(h8$&#qq4ifx%6+__f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

# VERY IMPORTANT!!!
# Knox provides one token per call to the login view -
# allowing each client to have its own token which is deleted on the server side when the client logs out.

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'knox',
    'rest_auth',
    # 'rest_framework.authtoken',
    'bookmarks',
    'LocalUser',
    'frontend',
    # 'corsheaders',
    'oauth2_provider',
    'social_django',
    'rest_framework_social_oauth2',
]

SITE_ID = 1

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
                                        'rest_framework.authentication.SessionAuthentication',
                                        'knox.auth.TokenAuthentication',
                                       # 'rest_framework.authentication.TokenAuthentication',
                                       # 'rest_framework.authentication.BasicAuthentication',
                                        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
                                        'rest_framework_social_oauth2.authentication.SocialAuthentication',

                                       ),
    'DEFAULT_PERMISSION_CLASSES':
        [
            # 'rest_framework.permissions.IsAdminUser',
            #     'rest_framework.permissions.IsAdminUser',
            'rest_framework.permissions.IsAuthenticated',
            # 'rest_framework.permissions.IsAuthenticatedOrReadOnly',
        ],

}

LOGIN_URL = '/api/auth/login/'


AUTHENTICATION_BACKENDS = (

    # Django
    'django.contrib.auth.backends.ModelBackend',


    # Facebook OAuth2
    'social_core.backends.facebook.FacebookAppOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',

    # Google backends
    # 'social_core.backends.google.GoogleAppOAuth2',
    'social_core.backends.google.GoogleOAuth2',

    # django-rest-framework-social-oauth2
    'rest_framework_social_oauth2.backends.DjangoOAuth2',

)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
]


# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'SCOPE': [
#             'profile',
#             'email',
#         ],
#         'AUTH_PARAMS': {
#             'access_type': 'online',
#         }
#     }
# }

ROOT_URLCONF = 'GpsbookmarkerAPI.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'GpsbookmarkerAPI.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/tatic-files/

STATIC_URL = '/static/'


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# CORS_ORIGIN_ALLOW_ALL = True


# REST_KNOX = {
#     'USERSERIALIZER': 'auth.serializers.UserRetrieveSerializer'
# }


# Facebook configuration
SOCIAL_AUTH_FACEBOOK_KEY = '455060218662230'
SOCIAL_AUTH_FACEBOOK_SECRET = 'aa20d0080ca5e9abbfa1c30e7d32b0bf'

# Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from facebook.
# Email is not sent by default, to get it, you must request the email permission:
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email'
}


#GOOGLE CONFIGURATION
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '177417284910-d4d0bqon86reqfveubkk3r9gopld9gfh.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '5ribOkIHejG4umUTWKrpbOn9'

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['email']





LOGIN_REDIRECT_URL = '/'
# ACCOUNT_EMAIL_REQUIRED = 'True'
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
AUTH_USER_MODEL = 'LocalUser.LocalUser'


